// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaIndicadores.Server.utils;

#nullable disable

namespace SistemaIndicadores.Server.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240427035717_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("indicadores_api.Server.Models.Actor", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fkidtipoactor")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkidtipoactor");

                    b.ToTable("actor");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Articulo", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fkidseccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("fkidsubseccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkidseccion");

                    b.HasIndex("fkidsubseccion");

                    b.ToTable("articulo");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Frecuencia", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("frecuencia");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Fuente", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("fuente");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.FuentePorIndicador", b =>
                {
                    b.Property<int>("fkidfuente")
                        .HasColumnType("int");

                    b.Property<int>("fkidindicador")
                        .HasColumnType("int");

                    b.HasKey("fkidfuente", "fkidindicador");

                    b.ToTable("fuentesporindicador");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Indicador", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("alcance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fkidarticulo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fkidfrecuencia")
                        .HasColumnType("int");

                    b.Property<string>("fkidliteral")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("fkidnumeral")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("fkidparagrafo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fkidsentido")
                        .HasColumnType("int");

                    b.Property<int>("fkidtipoindicador")
                        .HasColumnType("int");

                    b.Property<int>("fkidunidadmedicion")
                        .HasColumnType("int");

                    b.Property<string>("formula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("meta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("objetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fkidarticulo");

                    b.HasIndex("fkidfrecuencia");

                    b.HasIndex("fkidliteral");

                    b.HasIndex("fkidnumeral");

                    b.HasIndex("fkidparagrafo");

                    b.HasIndex("fkidsentido");

                    b.HasIndex("fkidtipoindicador");

                    b.HasIndex("fkidunidadmedicion");

                    b.ToTable("indicador");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Literal", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fkidarticulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("literal");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Numeral", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fkidliteral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("numeral");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Paragrafo", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fkidarticulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("paragrafo");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.RepresenVisual", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("represenvisual");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.RepresenVisualPorIndicador", b =>
                {
                    b.Property<int>("fkidindicador")
                        .HasColumnType("int");

                    b.Property<int>("fkidrepresenvisual")
                        .HasColumnType("int");

                    b.HasKey("fkidindicador", "fkidrepresenvisual");

                    b.ToTable("represenvisualporindicador");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.ResponsablesPorIndicador", b =>
                {
                    b.Property<string>("fkidresponsable")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fkidindicador")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaasignacion")
                        .HasColumnType("datetime2");

                    b.HasKey("fkidresponsable", "fkidindicador");

                    b.ToTable("responsablesporindicador");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.ResultadoIndicador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("fechacalculo")
                        .HasColumnType("datetime2");

                    b.Property<int>("fkidindicador")
                        .HasColumnType("int");

                    b.Property<double?>("resultado")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("resultadoindicador");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.RolUsuario", b =>
                {
                    b.Property<string>("fkemail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fkidrol")
                        .HasColumnType("int");

                    b.HasKey("fkemail", "fkidrol");

                    b.ToTable("rol_usuario");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Seccion", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("seccion");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Sentido", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("sentido");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Subseccion", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("subseccion");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.TipoActor", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tipoactor");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.TipoIndicador", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tipoindicador");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.UnidadMedicion", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("unidadmedicion");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Usuario", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Variable", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("id"));

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("fkemailusuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("variable");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.VariablePorIndicador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double>("dato")
                        .HasColumnType("float");

                    b.Property<DateTime>("fechadato")
                        .HasColumnType("datetime2");

                    b.Property<string>("fkemailusuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fkidindicador")
                        .HasColumnType("int");

                    b.Property<int>("fkidvariable")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("variablesporindicador");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Actor", b =>
                {
                    b.HasOne("indicadores_api.Server.Models.TipoActor", "tipo")
                        .WithMany()
                        .HasForeignKey("fkidtipoactor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipo");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Articulo", b =>
                {
                    b.HasOne("indicadores_api.Server.Models.Seccion", "seccion")
                        .WithMany()
                        .HasForeignKey("fkidseccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("indicadores_api.Server.Models.Subseccion", "subseccion")
                        .WithMany()
                        .HasForeignKey("fkidsubseccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("seccion");

                    b.Navigation("subseccion");
                });

            modelBuilder.Entity("indicadores_api.Server.Models.Indicador", b =>
                {
                    b.HasOne("indicadores_api.Server.Models.Articulo", "articulo")
                        .WithMany()
                        .HasForeignKey("fkidarticulo");

                    b.HasOne("indicadores_api.Server.Models.Frecuencia", "frecuencia")
                        .WithMany()
                        .HasForeignKey("fkidfrecuencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("indicadores_api.Server.Models.Literal", "literal")
                        .WithMany()
                        .HasForeignKey("fkidliteral");

                    b.HasOne("indicadores_api.Server.Models.Numeral", "numeral")
                        .WithMany()
                        .HasForeignKey("fkidnumeral");

                    b.HasOne("indicadores_api.Server.Models.Paragrafo", "paragrafo")
                        .WithMany()
                        .HasForeignKey("fkidparagrafo");

                    b.HasOne("indicadores_api.Server.Models.Sentido", "sentido")
                        .WithMany()
                        .HasForeignKey("fkidsentido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("indicadores_api.Server.Models.TipoIndicador", "tipo")
                        .WithMany()
                        .HasForeignKey("fkidtipoindicador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("indicadores_api.Server.Models.UnidadMedicion", "unidad")
                        .WithMany()
                        .HasForeignKey("fkidunidadmedicion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("articulo");

                    b.Navigation("frecuencia");

                    b.Navigation("literal");

                    b.Navigation("numeral");

                    b.Navigation("paragrafo");

                    b.Navigation("sentido");

                    b.Navigation("tipo");

                    b.Navigation("unidad");
                });
#pragma warning restore 612, 618
        }
    }
}
